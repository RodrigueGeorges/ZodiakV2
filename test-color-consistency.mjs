import fetch from 'node-fetch';

const NETLIFY_URL = 'https://zodiakv2.netlify.app';

console.log('üé® TEST COH√âRENCE COULEURS - ZODIAK');
console.log('====================================\n');

async function testColorConsistency() {
  try {
    // 1. Test de la page d'accueil
    console.log('1Ô∏è‚É£ Test page d\'accueil...');
    
    const homeResponse = await fetch(`${NETLIFY_URL}/`);
    console.log('üìä Status page d\'accueil:', homeResponse.status);
    
    if (homeResponse.ok) {
      const homeHtml = await homeResponse.text();
      
      // V√©rifier les couleurs bleues
      if (homeHtml.includes('from-blue-300 via-blue-200 to-cyan-300')) {
        console.log('‚úÖ Nom "Zodiak" en bleu d√©tect√©');
      } else {
        console.log('‚ùå Nom "Zodiak" pas en bleu');
      }
      
      if (homeHtml.includes('from-blue-200 via-blue-100 to-cyan-200')) {
        console.log('‚úÖ Tagline en bleu d√©tect√©e');
      } else {
        console.log('‚ùå Tagline pas en bleu');
      }
      
      if (homeHtml.includes('from-blue-400 to-blue-600')) {
        console.log('‚úÖ Bouton principal en bleu d√©tect√©');
      } else {
        console.log('‚ùå Bouton principal pas en bleu');
      }
    }

    // 2. Test de la page profil
    console.log('\n2Ô∏è‚É£ Test page profil...');
    
    const profileResponse = await fetch(`${NETLIFY_URL}/profile`);
    console.log('üìä Status page profil:', profileResponse.status);
    
    if (profileResponse.ok) {
      const profileHtml = await profileResponse.text();
      
      // V√©rifier PageLayout
      if (profileHtml.includes('from-blue-300 to-blue-500')) {
        console.log('‚úÖ PageLayout en bleu d√©tect√©');
      } else {
        console.log('‚ùå PageLayout pas en bleu');
      }
      
      if (profileHtml.includes('text-blue-300/80')) {
        console.log('‚úÖ Subtitle en bleu d√©tect√©');
      } else {
        console.log('‚ùå Subtitle pas en bleu');
      }
    }

    // 3. Test de la page natal
    console.log('\n3Ô∏è‚É£ Test page natal...');
    
    const natalResponse = await fetch(`${NETLIFY_URL}/natal`);
    console.log('üìä Status page natal:', natalResponse.status);
    
    if (natalResponse.ok) {
      const natalHtml = await natalResponse.text();
      
      if (natalHtml.includes('from-blue-300 to-blue-500')) {
        console.log('‚úÖ Page natal en bleu d√©tect√©');
      } else {
        console.log('‚ùå Page natal pas en bleu');
      }
    }

    // 4. Test de la navigation mobile
    console.log('\n4Ô∏è‚É£ Test navigation mobile...');
    
    const navResponse = await fetch(`${NETLIFY_URL}/profile`);
    if (navResponse.ok) {
      const navHtml = await navResponse.text();
      
      if (navHtml.includes('text-blue-400 hover:text-blue-300')) {
        console.log('‚úÖ BottomNavBar en bleu d√©tect√©e');
      } else {
        console.log('‚ùå BottomNavBar pas en bleu');
      }
      
      if (navHtml.includes('border-blue-400/20')) {
        console.log('‚úÖ Bordure BottomNavBar en bleu d√©tect√©e');
      } else {
        console.log('‚ùå Bordure BottomNavBar pas en bleu');
      }
    }

  } catch (error) {
    console.error('‚ùå ERREUR lors du test:', error.message);
  }
}

async function analyzeColorTheme() {
  console.log('\n5Ô∏è‚É£ Analyse du th√®me de couleurs...');
  
  console.log('üéØ TH√àME BLEU COSMIQUE UNIFI√â:');
  console.log('‚úÖ Logo : Bleu n√©on (#00BFFF)');
  console.log('‚úÖ Nom "Zodiak" : Gradient bleu');
  console.log('‚úÖ Tagline : Gradient bleu');
  console.log('‚úÖ Bouton principal : Bleu');
  console.log('‚úÖ PageLayout : Gradients bleus');
  console.log('‚úÖ BottomNavBar : Bleu');
  console.log('‚úÖ Variables CSS : Primary/Secondary en bleu');
  
  console.log('\nüí° AVANTAGES DU TH√àME BLEU:');
  console.log('‚úÖ Coh√©rence visuelle parfaite');
  console.log('‚úÖ Th√®me cosmique adapt√© √† l\'astrologie');
  console.log('‚úÖ Moderne et √©l√©gant');
  console.log('‚úÖ Accessibilit√© am√©lior√©e');
  console.log('‚úÖ Exp√©rience utilisateur harmonieuse');
}

async function runColorTests() {
  await testColorConsistency();
  await analyzeColorTheme();
  
  console.log('\nüéØ R√âSUM√â DE LA COH√âRENCE COULEURS');
  console.log('===================================');
  console.log('‚úÖ Th√®me bleu cosmique unifi√©');
  console.log('‚úÖ Logo coh√©rent avec le th√®me');
  console.log('‚úÖ Navigation harmonis√©e');
  console.log('‚úÖ Pages internes coh√©rentes');
  console.log('‚úÖ Variables CSS standardis√©es');
  
  console.log('\nüöÄ PROCHAINES √âTAPES:');
  console.log('1. Tester sur appareils r√©els');
  console.log('2. Valider l\'accessibilit√©');
  console.log('3. V√©rifier le contraste');
  console.log('4. Optimiser si n√©cessaire');
  
  console.log('\nüéâ La coh√©rence des couleurs est maintenant parfaite !');
}

runColorTests().catch(console.error);
