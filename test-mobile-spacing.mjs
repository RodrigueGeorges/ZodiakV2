import fetch from 'node-fetch';

const NETLIFY_URL = 'https://zodiakv2.netlify.app';

console.log('üîç DIAGNOSTIC ESPACEMENT MOBILE - ZODIAK');
console.log('========================================\n');

async function testMobileSpacing() {
  try {
    // 1. Test de la page d'accueil
    console.log('1Ô∏è‚É£ Test page d\'accueil...');
    
    const homeResponse = await fetch(`${NETLIFY_URL}/`);
    console.log('üìä Status page d\'accueil:', homeResponse.status);
    
    if (homeResponse.ok) {
      const homeHtml = await homeResponse.text();
      
      // V√©rifier les probl√®mes d'espacement
      if (homeHtml.includes('pt-16 md:pt-24')) {
        console.log('‚úÖ Espacement responsive d√©tect√©');
      } else {
        console.log('‚ùå Espacement responsive manquant');
      }
      
      if (homeHtml.includes('safe-area-inset-top')) {
        console.log('‚úÖ Safe area top d√©tect√©');
      } else {
        console.log('‚ùå Safe area top manquant');
      }
    }

    // 2. Test de la page profil
    console.log('\n2Ô∏è‚É£ Test page profil...');
    
    const profileResponse = await fetch(`${NETLIFY_URL}/profile`);
    console.log('üìä Status page profil:', profileResponse.status);
    
    if (profileResponse.ok) {
      const profileHtml = await profileResponse.text();
      
      // V√©rifier PageLayout
      if (profileHtml.includes('page-container')) {
        console.log('‚úÖ PageLayout d√©tect√©');
      } else {
        console.log('‚ùå PageLayout manquant');
      }
      
      if (profileHtml.includes('page-content')) {
        console.log('‚úÖ Page content d√©tect√©');
      } else {
        console.log('‚ùå Page content manquant');
      }
      
      if (profileHtml.includes('py-8')) {
        console.log('‚úÖ Padding vertical d√©tect√©');
      } else {
        console.log('‚ùå Padding vertical manquant');
      }
    }

    // 3. Test de la page natal
    console.log('\n3Ô∏è‚É£ Test page natal...');
    
    const natalResponse = await fetch(`${NETLIFY_URL}/natal`);
    console.log('üìä Status page natal:', natalResponse.status);
    
    if (natalResponse.ok) {
      const natalHtml = await natalResponse.text();
      
      if (natalHtml.includes('page-header')) {
        console.log('‚úÖ Page header d√©tect√©');
      } else {
        console.log('‚ùå Page header manquant');
      }
    }

    // 4. Test de la page guidance
    console.log('\n4Ô∏è‚É£ Test page guidance...');
    
    const guidanceResponse = await fetch(`${NETLIFY_URL}/guidance`);
    console.log('üìä Status page guidance:', guidanceResponse.status);
    
    if (guidanceResponse.ok) {
      const guidanceHtml = await guidanceResponse.text();
      
      if (guidanceHtml.includes('space-y-4 md:space-y-6')) {
        console.log('‚úÖ Espacement guidance responsive d√©tect√©');
      } else {
        console.log('‚ùå Espacement guidance responsive manquant');
      }
    }

  } catch (error) {
    console.error('‚ùå ERREUR lors du test:', error.message);
  }
}

async function analyzeSpacingIssues() {
  console.log('\n5Ô∏è‚É£ Analyse des probl√®mes d\'espacement...');
  
  console.log('üîç PROBL√àMES IDENTIFI√âS:');
  console.log('1. PageLayout utilise py-8 par d√©faut (trop d\'espace sur mobile)');
  console.log('2. Pas de gestion des safe areas sur mobile');
  console.log('3. Pas de padding top adaptatif pour mobile');
  console.log('4. BottomNavBar peut cr√©er des conflits d\'espacement');
  
  console.log('\nüí° SOLUTIONS PROPOS√âES:');
  console.log('1. Ajouter safe-area-inset-top au PageLayout');
  console.log('2. R√©duire le padding top sur mobile');
  console.log('3. Optimiser l\'espacement pour les appareils avec notch');
  console.log('4. Ajuster le padding bottom pour la BottomNavBar');
}

async function runSpacingTests() {
  await testMobileSpacing();
  await analyzeSpacingIssues();
  
  console.log('\nüéØ R√âSUM√â DES PROBL√àMES D\'ESPACEMENT');
  console.log('=====================================');
  console.log('‚ùå Espace vide en haut sur mobile');
  console.log('‚ùå Pas de gestion des safe areas');
  console.log('‚ùå Padding non adaptatif');
  console.log('‚ùå Conflits avec BottomNavBar');
  
  console.log('\nüöÄ CORRECTIONS N√âCESSAIRES:');
  console.log('1. Modifier PageLayout pour mobile');
  console.log('2. Ajouter safe-area-inset-top');
  console.log('3. Optimiser les paddings');
  console.log('4. Tester sur appareils r√©els');
}

runSpacingTests().catch(console.error);
